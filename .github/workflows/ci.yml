name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        ruff check tts_cli/
    
    - name: Format check with black
      run: |
        black --check tts_cli/
    
    - name: Type check with mypy
      run: |
        mypy tts_cli/
      continue-on-error: true  # Allow mypy failures initially
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=tts_cli --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-providers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        provider: [edge_tts, chatterbox, orpheus, naturalspeech, maskgct]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install base package
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Install provider dependencies
      run: |
        pip install -e ".[${{ matrix.provider }}]"
      continue-on-error: true
    
    - name: Test provider import
      run: |
        python -c "from tts_cli.tts import load_provider; load_provider('${{ matrix.provider }}')"
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build distribution
      run: |
        python -m build
    
    - name: Check distribution
      run: |
        pip install twine
        twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/